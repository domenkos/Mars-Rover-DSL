/**
 * generated by Xtext 2.12.0
 */
package org.xtext.robotFinal.marsRover;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>LED Color</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.robotFinal.marsRover.MarsRoverPackage#getLED_Color()
 * @model
 * @generated
 */
public enum LED_Color implements Enumerator
{
  /**
   * The '<em><b>LED ORANGE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LED_ORANGE_VALUE
   * @generated
   * @ordered
   */
  LED_ORANGE(0, "LED_ORANGE", "orange"),

  /**
   * The '<em><b>LED RED</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LED_RED_VALUE
   * @generated
   * @ordered
   */
  LED_RED(1, "LED_RED", "red"),

  /**
   * The '<em><b>LED GREEN</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LED_GREEN_VALUE
   * @generated
   * @ordered
   */
  LED_GREEN(2, "LED_GREEN", "green"),

  /**
   * The '<em><b>LED OFF</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LED_OFF_VALUE
   * @generated
   * @ordered
   */
  LED_OFF(3, "LED_OFF", "off");

  /**
   * The '<em><b>LED ORANGE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>LED ORANGE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #LED_ORANGE
   * @model literal="orange"
   * @generated
   * @ordered
   */
  public static final int LED_ORANGE_VALUE = 0;

  /**
   * The '<em><b>LED RED</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>LED RED</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #LED_RED
   * @model literal="red"
   * @generated
   * @ordered
   */
  public static final int LED_RED_VALUE = 1;

  /**
   * The '<em><b>LED GREEN</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>LED GREEN</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #LED_GREEN
   * @model literal="green"
   * @generated
   * @ordered
   */
  public static final int LED_GREEN_VALUE = 2;

  /**
   * The '<em><b>LED OFF</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>LED OFF</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #LED_OFF
   * @model literal="off"
   * @generated
   * @ordered
   */
  public static final int LED_OFF_VALUE = 3;

  /**
   * An array of all the '<em><b>LED Color</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final LED_Color[] VALUES_ARRAY =
    new LED_Color[]
    {
      LED_ORANGE,
      LED_RED,
      LED_GREEN,
      LED_OFF,
    };

  /**
   * A public read-only list of all the '<em><b>LED Color</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<LED_Color> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>LED Color</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LED_Color get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      LED_Color result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>LED Color</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LED_Color getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      LED_Color result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>LED Color</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LED_Color get(int value)
  {
    switch (value)
    {
      case LED_ORANGE_VALUE: return LED_ORANGE;
      case LED_RED_VALUE: return LED_RED;
      case LED_GREEN_VALUE: return LED_GREEN;
      case LED_OFF_VALUE: return LED_OFF;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private LED_Color(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //LED_Color
