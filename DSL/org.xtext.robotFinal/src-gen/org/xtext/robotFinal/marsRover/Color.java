/**
 * generated by Xtext 2.12.0
 */
package org.xtext.robotFinal.marsRover;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Color</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.robotFinal.marsRover.MarsRoverPackage#getColor()
 * @model
 * @generated
 */
public enum Color implements Enumerator
{
  /**
   * The '<em><b>COLOR RED</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COLOR_RED_VALUE
   * @generated
   * @ordered
   */
  COLOR_RED(0, "COLOR_RED", "red"),

  /**
   * The '<em><b>COLOR BLUE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COLOR_BLUE_VALUE
   * @generated
   * @ordered
   */
  COLOR_BLUE(1, "COLOR_BLUE", "blue"),

  /**
   * The '<em><b>COLOR GREEN</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COLOR_GREEN_VALUE
   * @generated
   * @ordered
   */
  COLOR_GREEN(2, "COLOR_GREEN", "green"),

  /**
   * The '<em><b>COLOR ORANGE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COLOR_ORANGE_VALUE
   * @generated
   * @ordered
   */
  COLOR_ORANGE(3, "COLOR_ORANGE", "orange"),

  /**
   * The '<em><b>COLOR WHITE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COLOR_WHITE_VALUE
   * @generated
   * @ordered
   */
  COLOR_WHITE(4, "COLOR_WHITE", "white"),

  /**
   * The '<em><b>COLOR BLACK</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COLOR_BLACK_VALUE
   * @generated
   * @ordered
   */
  COLOR_BLACK(5, "COLOR_BLACK", "black"),

  /**
   * The '<em><b>COLOR OFF</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COLOR_OFF_VALUE
   * @generated
   * @ordered
   */
  COLOR_OFF(6, "COLOR_OFF", "off");

  /**
   * The '<em><b>COLOR RED</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COLOR RED</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COLOR_RED
   * @model literal="red"
   * @generated
   * @ordered
   */
  public static final int COLOR_RED_VALUE = 0;

  /**
   * The '<em><b>COLOR BLUE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COLOR BLUE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COLOR_BLUE
   * @model literal="blue"
   * @generated
   * @ordered
   */
  public static final int COLOR_BLUE_VALUE = 1;

  /**
   * The '<em><b>COLOR GREEN</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COLOR GREEN</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COLOR_GREEN
   * @model literal="green"
   * @generated
   * @ordered
   */
  public static final int COLOR_GREEN_VALUE = 2;

  /**
   * The '<em><b>COLOR ORANGE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COLOR ORANGE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COLOR_ORANGE
   * @model literal="orange"
   * @generated
   * @ordered
   */
  public static final int COLOR_ORANGE_VALUE = 3;

  /**
   * The '<em><b>COLOR WHITE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COLOR WHITE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COLOR_WHITE
   * @model literal="white"
   * @generated
   * @ordered
   */
  public static final int COLOR_WHITE_VALUE = 4;

  /**
   * The '<em><b>COLOR BLACK</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COLOR BLACK</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COLOR_BLACK
   * @model literal="black"
   * @generated
   * @ordered
   */
  public static final int COLOR_BLACK_VALUE = 5;

  /**
   * The '<em><b>COLOR OFF</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>COLOR OFF</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #COLOR_OFF
   * @model literal="off"
   * @generated
   * @ordered
   */
  public static final int COLOR_OFF_VALUE = 6;

  /**
   * An array of all the '<em><b>Color</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Color[] VALUES_ARRAY =
    new Color[]
    {
      COLOR_RED,
      COLOR_BLUE,
      COLOR_GREEN,
      COLOR_ORANGE,
      COLOR_WHITE,
      COLOR_BLACK,
      COLOR_OFF,
    };

  /**
   * A public read-only list of all the '<em><b>Color</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Color> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Color</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Color get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Color result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Color</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Color getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Color result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Color</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Color get(int value)
  {
    switch (value)
    {
      case COLOR_RED_VALUE: return COLOR_RED;
      case COLOR_BLUE_VALUE: return COLOR_BLUE;
      case COLOR_GREEN_VALUE: return COLOR_GREEN;
      case COLOR_ORANGE_VALUE: return COLOR_ORANGE;
      case COLOR_WHITE_VALUE: return COLOR_WHITE;
      case COLOR_BLACK_VALUE: return COLOR_BLACK;
      case COLOR_OFF_VALUE: return COLOR_OFF;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Color(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Color
