/**
 * generated by Xtext 2.12.0
 */
package org.xtext.robotFinal.marsRover.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtext.robotFinal.marsRover.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.robotFinal.marsRover.MarsRoverPackage
 * @generated
 */
public class MarsRoverAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MarsRoverPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MarsRoverAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = MarsRoverPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MarsRoverSwitch<Adapter> modelSwitch =
    new MarsRoverSwitch<Adapter>()
    {
      @Override
      public Adapter caseRobot(Robot object)
      {
        return createRobotAdapter();
      }
      @Override
      public Adapter casemission(mission object)
      {
        return createmissionAdapter();
      }
      @Override
      public Adapter caseavoid_obstacles(avoid_obstacles object)
      {
        return createavoid_obstaclesAdapter();
      }
      @Override
      public Adapter caseultra(ultra object)
      {
        return createultraAdapter();
      }
      @Override
      public Adapter casebumpers(bumpers object)
      {
        return createbumpersAdapter();
      }
      @Override
      public Adapter casedetect_lakes(detect_lakes object)
      {
        return createdetect_lakesAdapter();
      }
      @Override
      public Adapter casedetect_rocks(detect_rocks object)
      {
        return createdetect_rocksAdapter();
      }
      @Override
      public Adapter casepush_obstacles(push_obstacles object)
      {
        return createpush_obstaclesAdapter();
      }
      @Override
      public Adapter caseafter_action(after_action object)
      {
        return createafter_actionAdapter();
      }
      @Override
      public Adapter caseindication(indication object)
      {
        return createindicationAdapter();
      }
      @Override
      public Adapter casesound(sound object)
      {
        return createsoundAdapter();
      }
      @Override
      public Adapter casemessage(message object)
      {
        return createmessageAdapter();
      }
      @Override
      public Adapter casecolor_indication(color_indication object)
      {
        return createcolor_indicationAdapter();
      }
      @Override
      public Adapter casepark(park object)
      {
        return createparkAdapter();
      }
      @Override
      public Adapter caseavoid_lakes(avoid_lakes object)
      {
        return createavoid_lakesAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.Robot <em>Robot</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.Robot
   * @generated
   */
  public Adapter createRobotAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.mission <em>mission</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.mission
   * @generated
   */
  public Adapter createmissionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.avoid_obstacles <em>avoid obstacles</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.avoid_obstacles
   * @generated
   */
  public Adapter createavoid_obstaclesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.ultra <em>ultra</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.ultra
   * @generated
   */
  public Adapter createultraAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.bumpers <em>bumpers</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.bumpers
   * @generated
   */
  public Adapter createbumpersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.detect_lakes <em>detect lakes</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.detect_lakes
   * @generated
   */
  public Adapter createdetect_lakesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.detect_rocks <em>detect rocks</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.detect_rocks
   * @generated
   */
  public Adapter createdetect_rocksAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.push_obstacles <em>push obstacles</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.push_obstacles
   * @generated
   */
  public Adapter createpush_obstaclesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.after_action <em>after action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.after_action
   * @generated
   */
  public Adapter createafter_actionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.indication <em>indication</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.indication
   * @generated
   */
  public Adapter createindicationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.sound <em>sound</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.sound
   * @generated
   */
  public Adapter createsoundAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.message <em>message</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.message
   * @generated
   */
  public Adapter createmessageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.color_indication <em>color indication</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.color_indication
   * @generated
   */
  public Adapter createcolor_indicationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.park <em>park</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.park
   * @generated
   */
  public Adapter createparkAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.robotFinal.marsRover.avoid_lakes <em>avoid lakes</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.robotFinal.marsRover.avoid_lakes
   * @generated
   */
  public Adapter createavoid_lakesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //MarsRoverAdapterFactory
