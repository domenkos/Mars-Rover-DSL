/**
 * generated by Xtext 2.12.0
 */
package org.xtext.robotFinal.marsRover.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.robotFinal.marsRover.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.robotFinal.marsRover.MarsRoverPackage
 * @generated
 */
public class MarsRoverSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MarsRoverPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MarsRoverSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MarsRoverPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MarsRoverPackage.ROBOT:
      {
        Robot robot = (Robot)theEObject;
        T result = caseRobot(robot);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.MISSION:
      {
        mission mission = (mission)theEObject;
        T result = casemission(mission);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.AVOID_OBSTACLES:
      {
        avoid_obstacles avoid_obstacles = (avoid_obstacles)theEObject;
        T result = caseavoid_obstacles(avoid_obstacles);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.ULTRA:
      {
        ultra ultra = (ultra)theEObject;
        T result = caseultra(ultra);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.BUMPERS:
      {
        bumpers bumpers = (bumpers)theEObject;
        T result = casebumpers(bumpers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.DETECT_LAKES:
      {
        detect_lakes detect_lakes = (detect_lakes)theEObject;
        T result = casedetect_lakes(detect_lakes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.DETECT_ROCKS:
      {
        detect_rocks detect_rocks = (detect_rocks)theEObject;
        T result = casedetect_rocks(detect_rocks);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.PUSH_OBSTACLES:
      {
        push_obstacles push_obstacles = (push_obstacles)theEObject;
        T result = casepush_obstacles(push_obstacles);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.AFTER_ACTION:
      {
        after_action after_action = (after_action)theEObject;
        T result = caseafter_action(after_action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.INDICATION:
      {
        indication indication = (indication)theEObject;
        T result = caseindication(indication);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.SOUND:
      {
        sound sound = (sound)theEObject;
        T result = casesound(sound);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.MESSAGE:
      {
        message message = (message)theEObject;
        T result = casemessage(message);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.COLOR_INDICATION:
      {
        color_indication color_indication = (color_indication)theEObject;
        T result = casecolor_indication(color_indication);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.PARK:
      {
        park park = (park)theEObject;
        T result = casepark(park);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MarsRoverPackage.AVOID_LAKES:
      {
        avoid_lakes avoid_lakes = (avoid_lakes)theEObject;
        T result = caseavoid_lakes(avoid_lakes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Robot</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Robot</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRobot(Robot object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>mission</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>mission</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casemission(mission object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>avoid obstacles</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>avoid obstacles</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseavoid_obstacles(avoid_obstacles object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ultra</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ultra</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseultra(ultra object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>bumpers</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>bumpers</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casebumpers(bumpers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>detect lakes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>detect lakes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casedetect_lakes(detect_lakes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>detect rocks</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>detect rocks</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casedetect_rocks(detect_rocks object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>push obstacles</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>push obstacles</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casepush_obstacles(push_obstacles object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>after action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>after action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseafter_action(after_action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>indication</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>indication</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseindication(indication object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>sound</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>sound</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casesound(sound object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>message</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>message</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casemessage(message object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>color indication</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>color indication</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casecolor_indication(color_indication object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>park</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>park</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casepark(park object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>avoid lakes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>avoid lakes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseavoid_lakes(avoid_lakes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MarsRoverSwitch
