/*
 * generated by Xtext 2.12.0
 */
grammar InternalMarsRover;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.robotFinal.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.robotFinal.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.robotFinal.services.MarsRoverGrammarAccess;

}
@parser::members {
	private MarsRoverGrammarAccess grammarAccess;

	public void setGrammarAccess(MarsRoverGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemission
entryRulemission
:
{ before(grammarAccess.getMissionRule()); }
	 rulemission
{ after(grammarAccess.getMissionRule()); } 
	 EOF 
;

// Rule mission
rulemission 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionAccess().getGroup()); }
		(rule__Mission__Group__0)
		{ after(grammarAccess.getMissionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleavoid_obstacles
entryRuleavoid_obstacles
:
{ before(grammarAccess.getAvoid_obstaclesRule()); }
	 ruleavoid_obstacles
{ after(grammarAccess.getAvoid_obstaclesRule()); } 
	 EOF 
;

// Rule avoid_obstacles
ruleavoid_obstacles 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAvoid_obstaclesAccess().getGroup()); }
		(rule__Avoid_obstacles__Group__0)
		{ after(grammarAccess.getAvoid_obstaclesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleultra
entryRuleultra
:
{ before(grammarAccess.getUltraRule()); }
	 ruleultra
{ after(grammarAccess.getUltraRule()); } 
	 EOF 
;

// Rule ultra
ruleultra 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUltraAccess().getGroup()); }
		(rule__Ultra__Group__0)
		{ after(grammarAccess.getUltraAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebumpers
entryRulebumpers
:
{ before(grammarAccess.getBumpersRule()); }
	 rulebumpers
{ after(grammarAccess.getBumpersRule()); } 
	 EOF 
;

// Rule bumpers
rulebumpers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBumpersAccess().getNameAssignment()); }
		(rule__Bumpers__NameAssignment)
		{ after(grammarAccess.getBumpersAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledetect_lakes
entryRuledetect_lakes
:
{ before(grammarAccess.getDetect_lakesRule()); }
	 ruledetect_lakes
{ after(grammarAccess.getDetect_lakesRule()); } 
	 EOF 
;

// Rule detect_lakes
ruledetect_lakes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDetect_lakesAccess().getGroup()); }
		(rule__Detect_lakes__Group__0)
		{ after(grammarAccess.getDetect_lakesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledetect_rocks
entryRuledetect_rocks
:
{ before(grammarAccess.getDetect_rocksRule()); }
	 ruledetect_rocks
{ after(grammarAccess.getDetect_rocksRule()); } 
	 EOF 
;

// Rule detect_rocks
ruledetect_rocks 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDetect_rocksAccess().getGroup()); }
		(rule__Detect_rocks__Group__0)
		{ after(grammarAccess.getDetect_rocksAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepush_obstacles
entryRulepush_obstacles
:
{ before(grammarAccess.getPush_obstaclesRule()); }
	 rulepush_obstacles
{ after(grammarAccess.getPush_obstaclesRule()); } 
	 EOF 
;

// Rule push_obstacles
rulepush_obstacles 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPush_obstaclesAccess().getNameAssignment()); }
		(rule__Push_obstacles__NameAssignment)
		{ after(grammarAccess.getPush_obstaclesAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleafter_action
entryRuleafter_action
:
{ before(grammarAccess.getAfter_actionRule()); }
	 ruleafter_action
{ after(grammarAccess.getAfter_actionRule()); } 
	 EOF 
;

// Rule after_action
ruleafter_action 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAfter_actionAccess().getGroup()); }
		(rule__After_action__Group__0)
		{ after(grammarAccess.getAfter_actionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleindication
entryRuleindication
:
{ before(grammarAccess.getIndicationRule()); }
	 ruleindication
{ after(grammarAccess.getIndicationRule()); } 
	 EOF 
;

// Rule indication
ruleindication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndicationAccess().getGroup()); }
		(rule__Indication__Group__0)
		{ after(grammarAccess.getIndicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesound
entryRulesound
:
{ before(grammarAccess.getSoundRule()); }
	 rulesound
{ after(grammarAccess.getSoundRule()); } 
	 EOF 
;

// Rule sound
rulesound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoundAccess().getGroup()); }
		(rule__Sound__Group__0)
		{ after(grammarAccess.getSoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemessage
entryRulemessage
:
{ before(grammarAccess.getMessageRule()); }
	 rulemessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule message
rulemessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageAccess().getGroup()); }
		(rule__Message__Group__0)
		{ after(grammarAccess.getMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecolor_indication
entryRulecolor_indication
:
{ before(grammarAccess.getColor_indicationRule()); }
	 rulecolor_indication
{ after(grammarAccess.getColor_indicationRule()); } 
	 EOF 
;

// Rule color_indication
rulecolor_indication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColor_indicationAccess().getGroup()); }
		(rule__Color_indication__Group__0)
		{ after(grammarAccess.getColor_indicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleavoid_lakes
entryRuleavoid_lakes
:
{ before(grammarAccess.getAvoid_lakesRule()); }
	 ruleavoid_lakes
{ after(grammarAccess.getAvoid_lakesRule()); } 
	 EOF 
;

// Rule avoid_lakes
ruleavoid_lakes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAvoid_lakesAccess().getNameAssignment()); }
		(rule__Avoid_lakes__NameAssignment)
		{ after(grammarAccess.getAvoid_lakesAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Color
ruleColor
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LED_Color
ruleLED_Color
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLED_ColorAccess().getAlternatives()); }
		(rule__LED_Color__Alternatives)
		{ after(grammarAccess.getLED_ColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__TypeAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getTypeAvoid_obstaclesParserRuleCall_3_0_0()); }
		ruleavoid_obstacles
		{ after(grammarAccess.getMissionAccess().getTypeAvoid_obstaclesParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMissionAccess().getTypeDetect_lakesParserRuleCall_3_0_1()); }
		ruledetect_lakes
		{ after(grammarAccess.getMissionAccess().getTypeDetect_lakesParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMissionAccess().getTypeAvoid_lakesParserRuleCall_3_0_2()); }
		ruleavoid_lakes
		{ after(grammarAccess.getMissionAccess().getTypeAvoid_lakesParserRuleCall_3_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMissionAccess().getTypePush_obstaclesParserRuleCall_3_0_3()); }
		rulepush_obstacles
		{ after(grammarAccess.getMissionAccess().getTypePush_obstaclesParserRuleCall_3_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getMissionAccess().getTypeDetect_rocksParserRuleCall_3_0_4()); }
		ruledetect_rocks
		{ after(grammarAccess.getMissionAccess().getTypeDetect_rocksParserRuleCall_3_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__SensorsAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAvoid_obstaclesAccess().getSensorsUltraParserRuleCall_2_0_0()); }
		ruleultra
		{ after(grammarAccess.getAvoid_obstaclesAccess().getSensorsUltraParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAvoid_obstaclesAccess().getSensorsBumpersParserRuleCall_2_0_1()); }
		rulebumpers
		{ after(grammarAccess.getAvoid_obstaclesAccess().getSensorsBumpersParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__ActionAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfter_actionAccess().getActionStopKeyword_0_0_0()); }
		'stop'
		{ after(grammarAccess.getAfter_actionAccess().getActionStopKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAfter_actionAccess().getActionContinueKeyword_0_0_1()); }
		'continue'
		{ after(grammarAccess.getAfter_actionAccess().getActionContinueKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indication__TypeAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicationAccess().getTypeSoundParserRuleCall_1_0_0()); }
		rulesound
		{ after(grammarAccess.getIndicationAccess().getTypeSoundParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndicationAccess().getTypeMessageParserRuleCall_1_0_1()); }
		rulemessage
		{ after(grammarAccess.getIndicationAccess().getTypeMessageParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getIndicationAccess().getTypeColor_indicationParserRuleCall_1_0_2()); }
		rulecolor_indication
		{ after(grammarAccess.getIndicationAccess().getTypeColor_indicationParserRuleCall_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getCOLOR_REDEnumLiteralDeclaration_0()); }
		('red')
		{ after(grammarAccess.getColorAccess().getCOLOR_REDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getCOLOR_BLUEEnumLiteralDeclaration_1()); }
		('blue')
		{ after(grammarAccess.getColorAccess().getCOLOR_BLUEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getCOLOR_GREENEnumLiteralDeclaration_2()); }
		('green')
		{ after(grammarAccess.getColorAccess().getCOLOR_GREENEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getCOLOR_ORANGEEnumLiteralDeclaration_3()); }
		('orange')
		{ after(grammarAccess.getColorAccess().getCOLOR_ORANGEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getCOLOR_WHITEEnumLiteralDeclaration_4()); }
		('white')
		{ after(grammarAccess.getColorAccess().getCOLOR_WHITEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getCOLOR_BLACKEnumLiteralDeclaration_5()); }
		('black')
		{ after(grammarAccess.getColorAccess().getCOLOR_BLACKEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getCOLOR_OFFEnumLiteralDeclaration_6()); }
		('off')
		{ after(grammarAccess.getColorAccess().getCOLOR_OFFEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LED_Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLED_ColorAccess().getLED_ORANGEEnumLiteralDeclaration_0()); }
		('orange')
		{ after(grammarAccess.getLED_ColorAccess().getLED_ORANGEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLED_ColorAccess().getLED_REDEnumLiteralDeclaration_1()); }
		('red')
		{ after(grammarAccess.getLED_ColorAccess().getLED_REDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLED_ColorAccess().getLED_GREENEnumLiteralDeclaration_2()); }
		('green')
		{ after(grammarAccess.getLED_ColorAccess().getLED_GREENEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getLED_ColorAccess().getLED_OFFEnumLiteralDeclaration_3()); }
		('off')
		{ after(grammarAccess.getLED_ColorAccess().getLED_OFFEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_1()); }
	(rule__Robot__NameAssignment_1)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getSlave_addressKeyword_2()); }
	'slave_address'
	{ after(grammarAccess.getRobotAccess().getSlave_addressKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getSlave_addressAssignment_3()); }
	(rule__Robot__Slave_addressAssignment_3)
	{ after(grammarAccess.getRobotAccess().getSlave_addressAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
	rule__Robot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getDrive_speedKeyword_4()); }
	'drive_speed'
	{ after(grammarAccess.getRobotAccess().getDrive_speedKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__5__Impl
	rule__Robot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getDrive_speedAssignment_5()); }
	(rule__Robot__Drive_speedAssignment_5)
	{ after(grammarAccess.getRobotAccess().getDrive_speedAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__6__Impl
	rule__Robot__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getSpecial_speedKeyword_6()); }
	'special_speed'
	{ after(grammarAccess.getRobotAccess().getSpecial_speedKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__7__Impl
	rule__Robot__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getSpecial_speedAssignment_7()); }
	(rule__Robot__Special_speedAssignment_7)
	{ after(grammarAccess.getRobotAccess().getSpecial_speedAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__8__Impl
	rule__Robot__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getMissionsKeyword_8()); }
	'missions'
	{ after(grammarAccess.getRobotAccess().getMissionsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getMissionsAssignment_9()); }
	(rule__Robot__MissionsAssignment_9)*
	{ after(grammarAccess.getRobotAccess().getMissionsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__0__Impl
	rule__Mission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
	'mission'
	{ after(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__1__Impl
	rule__Mission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getNameAssignment_1()); }
	(rule__Mission__NameAssignment_1)
	{ after(grammarAccess.getMissionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__2__Impl
	rule__Mission__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTypeKeyword_2()); }
	'type'
	{ after(grammarAccess.getMissionAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTypeAssignment_3()); }
	(rule__Mission__TypeAssignment_3)
	{ after(grammarAccess.getMissionAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Avoid_obstacles__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Avoid_obstacles__Group__0__Impl
	rule__Avoid_obstacles__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvoid_obstaclesAccess().getNameAssignment_0()); }
	(rule__Avoid_obstacles__NameAssignment_0)
	{ after(grammarAccess.getAvoid_obstaclesAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Avoid_obstacles__Group__1__Impl
	rule__Avoid_obstacles__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvoid_obstaclesAccess().getSensorsKeyword_1()); }
	'sensors'
	{ after(grammarAccess.getAvoid_obstaclesAccess().getSensorsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Avoid_obstacles__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvoid_obstaclesAccess().getSensorsAssignment_2()); }
	(rule__Avoid_obstacles__SensorsAssignment_2)*
	{ after(grammarAccess.getAvoid_obstaclesAccess().getSensorsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ultra__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ultra__Group__0__Impl
	rule__Ultra__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ultra__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltraAccess().getNameAssignment_0()); }
	(rule__Ultra__NameAssignment_0)
	{ after(grammarAccess.getUltraAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ultra__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ultra__Group__1__Impl
	rule__Ultra__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ultra__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltraAccess().getDistanceKeyword_1()); }
	'distance'
	{ after(grammarAccess.getUltraAccess().getDistanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ultra__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ultra__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ultra__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltraAccess().getDistanceAssignment_2()); }
	(rule__Ultra__DistanceAssignment_2)
	{ after(grammarAccess.getUltraAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Detect_lakes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_lakes__Group__0__Impl
	rule__Detect_lakes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_lakesAccess().getNameAssignment_0()); }
	(rule__Detect_lakes__NameAssignment_0)
	{ after(grammarAccess.getDetect_lakesAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_lakes__Group__1__Impl
	rule__Detect_lakes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_lakesAccess().getNumber_of_lakesKeyword_1()); }
	'number_of_lakes'
	{ after(grammarAccess.getDetect_lakesAccess().getNumber_of_lakesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_lakes__Group__2__Impl
	rule__Detect_lakes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_lakesAccess().getNumber_of_lakesAssignment_2()); }
	(rule__Detect_lakes__Number_of_lakesAssignment_2)
	{ after(grammarAccess.getDetect_lakesAccess().getNumber_of_lakesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_lakes__Group__3__Impl
	rule__Detect_lakes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_lakesAccess().getLakes_colorsKeyword_3()); }
	'lakes_colors'
	{ after(grammarAccess.getDetect_lakesAccess().getLakes_colorsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_lakes__Group__4__Impl
	rule__Detect_lakes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_lakesAccess().getLakes_colorsAssignment_4()); }
	(rule__Detect_lakes__Lakes_colorsAssignment_4)*
	{ after(grammarAccess.getDetect_lakesAccess().getLakes_colorsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_lakes__Group__5__Impl
	rule__Detect_lakes__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_lakesAccess().getAfter_examinatingKeyword_5()); }
	'after_examinating'
	{ after(grammarAccess.getDetect_lakesAccess().getAfter_examinatingKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_lakes__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_lakesAccess().getAfter_examinatingAssignment_6()); }
	(rule__Detect_lakes__After_examinatingAssignment_6)
	{ after(grammarAccess.getDetect_lakesAccess().getAfter_examinatingAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Detect_rocks__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_rocks__Group__0__Impl
	rule__Detect_rocks__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_rocksAccess().getNameAssignment_0()); }
	(rule__Detect_rocks__NameAssignment_0)
	{ after(grammarAccess.getDetect_rocksAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_rocks__Group__1__Impl
	rule__Detect_rocks__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_rocksAccess().getNumber_of_rocksKeyword_1()); }
	'number_of_rocks'
	{ after(grammarAccess.getDetect_rocksAccess().getNumber_of_rocksKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_rocks__Group__2__Impl
	rule__Detect_rocks__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_rocksAccess().getNumber_of_rocksAssignment_2()); }
	(rule__Detect_rocks__Number_of_rocksAssignment_2)
	{ after(grammarAccess.getDetect_rocksAccess().getNumber_of_rocksAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_rocks__Group__3__Impl
	rule__Detect_rocks__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_rocksAccess().getAfter_examinatingKeyword_3()); }
	'after_examinating'
	{ after(grammarAccess.getDetect_rocksAccess().getAfter_examinatingKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Detect_rocks__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDetect_rocksAccess().getAfter_examinatingAssignment_4()); }
	(rule__Detect_rocks__After_examinatingAssignment_4)
	{ after(grammarAccess.getDetect_rocksAccess().getAfter_examinatingAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__After_action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__After_action__Group__0__Impl
	rule__After_action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfter_actionAccess().getActionAssignment_0()); }
	(rule__After_action__ActionAssignment_0)
	{ after(grammarAccess.getAfter_actionAccess().getActionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__After_action__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfter_actionAccess().getGroup_1()); }
	(rule__After_action__Group_1__0)?
	{ after(grammarAccess.getAfter_actionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__After_action__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__After_action__Group_1__0__Impl
	rule__After_action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfter_actionAccess().getIndicateKeyword_1_0()); }
	'indicate'
	{ after(grammarAccess.getAfter_actionAccess().getIndicateKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__After_action__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfter_actionAccess().getIndicateAssignment_1_1()); }
	(rule__After_action__IndicateAssignment_1_1)*
	{ after(grammarAccess.getAfter_actionAccess().getIndicateAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Indication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indication__Group__0__Impl
	rule__Indication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicationAccess().getNameAssignment_0()); }
	(rule__Indication__NameAssignment_0)
	{ after(grammarAccess.getIndicationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicationAccess().getTypeAssignment_1()); }
	(rule__Indication__TypeAssignment_1)?
	{ after(grammarAccess.getIndicationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__0__Impl
	rule__Sound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getNameAssignment_0()); }
	(rule__Sound__NameAssignment_0)
	{ after(grammarAccess.getSoundAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__1__Impl
	rule__Sound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getDurationKeyword_1()); }
	'duration'
	{ after(grammarAccess.getSoundAccess().getDurationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__2__Impl
	rule__Sound__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getDurationAssignment_2()); }
	(rule__Sound__DurationAssignment_2)
	{ after(grammarAccess.getSoundAccess().getDurationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__3__Impl
	rule__Sound__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getFrequencyKeyword_3()); }
	'frequency'
	{ after(grammarAccess.getSoundAccess().getFrequencyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sound__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundAccess().getFrequencyAssignment_4()); }
	(rule__Sound__FrequencyAssignment_4)
	{ after(grammarAccess.getSoundAccess().getFrequencyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getNameAssignment_0()); }
	(rule__Message__NameAssignment_0)
	{ after(grammarAccess.getMessageAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getMsgAssignment_1()); }
	(rule__Message__MsgAssignment_1)
	{ after(grammarAccess.getMessageAccess().getMsgAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color_indication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color_indication__Group__0__Impl
	rule__Color_indication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color_indication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColor_indicationAccess().getNameAssignment_0()); }
	(rule__Color_indication__NameAssignment_0)
	{ after(grammarAccess.getColor_indicationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color_indication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color_indication__Group__1__Impl
	rule__Color_indication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color_indication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColor_indicationAccess().getWith_colorKeyword_1()); }
	'with_color'
	{ after(grammarAccess.getColor_indicationAccess().getWith_colorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color_indication__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color_indication__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color_indication__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColor_indicationAccess().getColorAssignment_2()); }
	(rule__Color_indication__ColorAssignment_2)
	{ after(grammarAccess.getColor_indicationAccess().getColorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRobotAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Slave_addressAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getSlave_addressSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRobotAccess().getSlave_addressSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Drive_speedAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getDrive_speedINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getRobotAccess().getDrive_speedINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Special_speedAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getSpecial_speedINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getRobotAccess().getSpecial_speedINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__MissionsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getMissionsMissionParserRuleCall_9_0()); }
		rulemission
		{ after(grammarAccess.getRobotAccess().getMissionsMissionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMissionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getTypeAlternatives_3_0()); }
		(rule__Mission__TypeAlternatives_3_0)
		{ after(grammarAccess.getMissionAccess().getTypeAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAvoid_obstaclesAccess().getNameAvoid_obstaclesKeyword_0_0()); }
		(
			{ before(grammarAccess.getAvoid_obstaclesAccess().getNameAvoid_obstaclesKeyword_0_0()); }
			'avoid_obstacles'
			{ after(grammarAccess.getAvoid_obstaclesAccess().getNameAvoid_obstaclesKeyword_0_0()); }
		)
		{ after(grammarAccess.getAvoid_obstaclesAccess().getNameAvoid_obstaclesKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_obstacles__SensorsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAvoid_obstaclesAccess().getSensorsAlternatives_2_0()); }
		(rule__Avoid_obstacles__SensorsAlternatives_2_0)
		{ after(grammarAccess.getAvoid_obstaclesAccess().getSensorsAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ultra__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUltraAccess().getNameUltraKeyword_0_0()); }
		(
			{ before(grammarAccess.getUltraAccess().getNameUltraKeyword_0_0()); }
			'ultra'
			{ after(grammarAccess.getUltraAccess().getNameUltraKeyword_0_0()); }
		)
		{ after(grammarAccess.getUltraAccess().getNameUltraKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ultra__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUltraAccess().getDistanceINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUltraAccess().getDistanceINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bumpers__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBumpersAccess().getNameBumpersKeyword_0()); }
		(
			{ before(grammarAccess.getBumpersAccess().getNameBumpersKeyword_0()); }
			'bumpers'
			{ after(grammarAccess.getBumpersAccess().getNameBumpersKeyword_0()); }
		)
		{ after(grammarAccess.getBumpersAccess().getNameBumpersKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetect_lakesAccess().getNameDetect_lakesKeyword_0_0()); }
		(
			{ before(grammarAccess.getDetect_lakesAccess().getNameDetect_lakesKeyword_0_0()); }
			'detect_lakes'
			{ after(grammarAccess.getDetect_lakesAccess().getNameDetect_lakesKeyword_0_0()); }
		)
		{ after(grammarAccess.getDetect_lakesAccess().getNameDetect_lakesKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Number_of_lakesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetect_lakesAccess().getNumber_of_lakesINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDetect_lakesAccess().getNumber_of_lakesINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__Lakes_colorsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetect_lakesAccess().getLakes_colorsColorEnumRuleCall_4_0()); }
		ruleColor
		{ after(grammarAccess.getDetect_lakesAccess().getLakes_colorsColorEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_lakes__After_examinatingAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetect_lakesAccess().getAfter_examinatingAfter_actionParserRuleCall_6_0()); }
		ruleafter_action
		{ after(grammarAccess.getDetect_lakesAccess().getAfter_examinatingAfter_actionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetect_rocksAccess().getNameDetect_rocksKeyword_0_0()); }
		(
			{ before(grammarAccess.getDetect_rocksAccess().getNameDetect_rocksKeyword_0_0()); }
			'detect_rocks'
			{ after(grammarAccess.getDetect_rocksAccess().getNameDetect_rocksKeyword_0_0()); }
		)
		{ after(grammarAccess.getDetect_rocksAccess().getNameDetect_rocksKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__Number_of_rocksAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetect_rocksAccess().getNumber_of_rocksINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDetect_rocksAccess().getNumber_of_rocksINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Detect_rocks__After_examinatingAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDetect_rocksAccess().getAfter_examinatingAfter_actionParserRuleCall_4_0()); }
		ruleafter_action
		{ after(grammarAccess.getDetect_rocksAccess().getAfter_examinatingAfter_actionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Push_obstacles__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPush_obstaclesAccess().getNamePush_obstaclesKeyword_0()); }
		(
			{ before(grammarAccess.getPush_obstaclesAccess().getNamePush_obstaclesKeyword_0()); }
			'push_obstacles'
			{ after(grammarAccess.getPush_obstaclesAccess().getNamePush_obstaclesKeyword_0()); }
		)
		{ after(grammarAccess.getPush_obstaclesAccess().getNamePush_obstaclesKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__ActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfter_actionAccess().getActionAlternatives_0_0()); }
		(rule__After_action__ActionAlternatives_0_0)
		{ after(grammarAccess.getAfter_actionAccess().getActionAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__After_action__IndicateAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfter_actionAccess().getIndicateIndicationParserRuleCall_1_1_0()); }
		ruleindication
		{ after(grammarAccess.getAfter_actionAccess().getIndicateIndicationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indication__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicationAccess().getNameWithKeyword_0_0()); }
		(
			{ before(grammarAccess.getIndicationAccess().getNameWithKeyword_0_0()); }
			'with'
			{ after(grammarAccess.getIndicationAccess().getNameWithKeyword_0_0()); }
		)
		{ after(grammarAccess.getIndicationAccess().getNameWithKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indication__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicationAccess().getTypeAlternatives_1_0()); }
		(rule__Indication__TypeAlternatives_1_0)
		{ after(grammarAccess.getIndicationAccess().getTypeAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getNameSoundKeyword_0_0()); }
		(
			{ before(grammarAccess.getSoundAccess().getNameSoundKeyword_0_0()); }
			'sound'
			{ after(grammarAccess.getSoundAccess().getNameSoundKeyword_0_0()); }
		)
		{ after(grammarAccess.getSoundAccess().getNameSoundKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__DurationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getDurationINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSoundAccess().getDurationINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__FrequencyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getFrequencyINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getSoundAccess().getFrequencyINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getNameMessageKeyword_0_0()); }
		(
			{ before(grammarAccess.getMessageAccess().getNameMessageKeyword_0_0()); }
			'message'
			{ after(grammarAccess.getMessageAccess().getNameMessageKeyword_0_0()); }
		)
		{ after(grammarAccess.getMessageAccess().getNameMessageKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__MsgAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getMsgSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageAccess().getMsgSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color_indication__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColor_indicationAccess().getNameColor_indicationKeyword_0_0()); }
		(
			{ before(grammarAccess.getColor_indicationAccess().getNameColor_indicationKeyword_0_0()); }
			'color_indication'
			{ after(grammarAccess.getColor_indicationAccess().getNameColor_indicationKeyword_0_0()); }
		)
		{ after(grammarAccess.getColor_indicationAccess().getNameColor_indicationKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color_indication__ColorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColor_indicationAccess().getColorLED_ColorEnumRuleCall_2_0()); }
		ruleLED_Color
		{ after(grammarAccess.getColor_indicationAccess().getColorLED_ColorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Avoid_lakes__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAvoid_lakesAccess().getNameAvoid_lakesKeyword_0()); }
		(
			{ before(grammarAccess.getAvoid_lakesAccess().getNameAvoid_lakesKeyword_0()); }
			'avoid_lakes'
			{ after(grammarAccess.getAvoid_lakesAccess().getNameAvoid_lakesKeyword_0()); }
		)
		{ after(grammarAccess.getAvoid_lakesAccess().getNameAvoid_lakesKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
